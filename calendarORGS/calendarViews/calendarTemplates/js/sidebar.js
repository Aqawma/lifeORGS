/**
 * Calendar Sidebar JavaScript Module
 * 
 * This module handles the sidebar functionality for the calendar interface,
 * including loading event data, displaying event details, and managing
 * sidebar open/close interactions.
 */

// Global storage for event data loaded from JSON file
let eventDataDict = {};

/**
 * Loads event data from the eventData.json file asynchronously.
 * 
 * Fetches the JSON file containing all event information and stores it
 * in the global eventDataDict variable for use by sidebar functions.
 * 
 * @async
 * @function loadEventData
 * @throws {Error} Logs error to console if fetch fails
 */
async function loadEventData() {
    try {
        // Fetch event data from JSON file generated by Python backend
        const response = await fetch('eventData.json');
        eventDataDict = await response.json();
    } catch (error) {
        console.error('Failed to load event data:', error);
    }
}

// Load event data when the DOM is fully loaded
document.addEventListener('DOMContentLoaded', loadEventData);

/**
 * Opens the sidebar with detailed information for a specific event.
 * 
 * Retrieves event data from the global eventDataDict and populates the sidebar
 * with formatted event details including start time, end time, and description.
 * Applies the event's color theme to the detail elements.
 * 
 * @function openSidebar
 * @param {string} eventId - The unique identifier for the event
 * @param {string} eventColor - The color associated with the event for theming
 * @returns {void}
 */
function openSidebar(eventId, eventColor) {
    // Get sidebar DOM elements
    const sidebar = document.getElementById("sidebar");
    const overlay = document.getElementById("sidebar-overlay");
    const content = document.getElementById("sidebar-content");
    const title = document.getElementById("sidebar-title");

    // Retrieve event data from loaded JSON
    const data = eventDataDict[eventId];
    if (!data) {
        console.error(`No event data found for event ${eventId}`);
        return;
    }

    // Set sidebar title to event name
    title.textContent = data.iD;

    // Populate sidebar content with formatted event details
    content.innerHTML = `
    <div class="event-detail" style="border-left-color: ${eventColor};">
        <strong>Start:</strong> ${String(data.startParsed.dayOfWeek)}, ${data.startParsed.monthName}
                                ${String(data.startParsed.day)}, ${String(data.startParsed.year)}
                                ${data.startParsed.hrTime}
    </div>
    <div class="event-detail" style="border-left-color: ${eventColor};">
        <strong>End:</strong> ${String(data.endParsed.dayOfWeek)}, ${data.endParsed.monthName}
                                ${String(data.endParsed.day)}, ${String(data.endParsed.year)}
                                ${data.endParsed.hrTime}
    </div>
    <div class="event-detail" style="border-left-color: ${eventColor};">
        <strong>Description:</strong> ${data.description}
    </div>
    `;

    // Activate sidebar and overlay visibility
    sidebar.classList.add("active");
    overlay.classList.add("active");
    document.body.classList.add('sidebar-open'); // Prevent body scrolling when sidebar is open
}

/**
 * Closes the sidebar and removes the overlay.
 * 
 * Hides the sidebar by removing the "active" class from both the sidebar
 * and overlay elements, and restores normal body scrolling behavior.
 * 
 * @function closeSidebar
 * @returns {void}
 */
function closeSidebar() {
    // Get sidebar DOM elements
    const sidebar = document.getElementById("sidebar");
    const overlay = document.getElementById("sidebar-overlay");

    // Deactivate sidebar and overlay visibility
    sidebar.classList.remove("active");
    overlay.classList.remove("active");
    document.body.classList.remove('sidebar-open'); // Restore body scrolling
}

/**
 * Keyboard event listener for sidebar interactions.
 * 
 * Listens for the Escape key press to close the sidebar, providing
 * a convenient way for users to dismiss the sidebar without clicking.
 */
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeSidebar(); // Close sidebar when Escape key is pressed
    }
})
